module nearest_neighbor #(
    parameter FATOR = 2,
    parameter LARGURA = 80,   // Imagem de entrada (menor)
    parameter ALTURA = 60,
    parameter NEW_LARG = LARGURA * FATOR,   // Imagem de saída (maior) 160x120
    parameter NEW_ALTURA = ALTURA * FATOR
)(
    input  wire clk,
    input  wire rst,
    input [7:0] pixel_rom,
    output reg [18:0] rom_addr,
    output reg [18:0] addr_ram_vga,
    output reg [7:0] pixel_saida,
    output reg done
);
    
    reg [10:0] x_in, y_in;      // Coordenadas da imagem original (menor)
    reg [10:0] x_out, y_out;    // Coordenadas da imagem de saída (maior)
    
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            rom_addr     <= 0;
            addr_ram_vga <= 0;
            x_in         <= 0;
            y_in         <= 0;
            x_out        <= 0;
            y_out        <= 0;
            done         <= 0;
            pixel_saida  <= 0;
        end else if (~done) begin
            // Mapeia coordenadas de saída para coordenadas de entrada
            // (vizinho mais próximo - divisão inteira)
            x_in = x_out / FATOR;
            y_in = y_out / FATOR;
            
            // Endereço da ROM (imagem menor 80x60)
            rom_addr <= y_in * LARGURA + x_in;
            
            // Pixel de saída é o mesmo da entrada (replicação)
            pixel_saida <= pixel_rom;
            
            // Endereço da RAM VGA (imagem maior 160x120)
            addr_ram_vga <= y_out * NEW_LARG + x_out;
            
            // Avança coordenadas da imagem de saída
            if (x_out >= NEW_LARG - 1) begin
                x_out <= 0;
                if (y_out >= NEW_ALTURA - 1) begin
                    y_out <= 0;
                    done <= 1;  // terminou toda a imagem
                end else begin
                    y_out <= y_out + 1;  // próxima linha
                end
            end else begin
                x_out <= x_out + 1;  // próxima coluna
            end
        end
    end
endmodule