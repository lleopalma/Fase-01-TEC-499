module decimation #(
    parameter FATOR = 2,
    parameter LARGURA = 160,
    parameter ALTURA = 120,
    parameter NEW_LARG = LARGURA / FATOR,
    parameter NEW_ALTURA = ALTURA / FATOR
)(
    input  wire clk,
    input  wire rst,
    input [7:0] pixel_rom,
    output reg [18:0] rom_addr,
    output reg [18:0] addr_ram_vga,
    output reg [7:0] pixel_saida,
    output reg done
);
    
    reg [10:0] x_in, y_in;
    reg [10:0] x_out, y_out;
    
    // Estados para controle
    reg [1:0] estado_x, estado_y;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
				  rom_addr     <= 0;
				  addr_ram_vga <= 0;
				  x_in         <= 0;
				  y_in         <= 0;
				  done         <= 0;
				  pixel_saida  <= 0;
			end else if (~done) begin
				  // Endereço da ROM (entrada 160x120)
				  rom_addr <= y_in * LARGURA + x_in;

				  // Mapeia para saída decimada (80x60)
				  pixel_saida   <= pixel_rom;
				  addr_ram_vga  <= (y_in / FATOR) * NEW_LARG + (x_in / FATOR);

				  // Avança coordenadas da ROM, pulando FATOR em X
				  if (x_in >= LARGURA - FATOR) begin
						x_in <= 0;
						if (y_in >= ALTURA - FATOR) begin
							 y_in <= 0;
							 done <= 1;  // terminou toda a imagem
						end else begin
							 y_in <= y_in + FATOR;  // pula linhas
						end
				  end else begin
						x_in <= x_in + FATOR;  // pula colunas
				  end
			 end
	end
endmodule